#!/usr/bin/env php
<?php

use AspirePress\AspireSync\Commands\Plugins\InternalPluginDownloadCommand;
use AspirePress\AspireSync\Commands\Plugins\DownloadPluginsCommand;
use AspirePress\AspireSync\Commands\Plugins\MetaImportPluginsCommand;
use AspirePress\AspireSync\Commands\Plugins\MetaDownloadPluginsCommand;
use AspirePress\AspireSync\Commands\Plugins\DownloadPluginsPartialCommand;
use AspirePress\AspireSync\Commands\RunAllCommand;
use AspirePress\AspireSync\Commands\Themes\DownloadThemesCommand;
use AspirePress\AspireSync\Commands\Themes\DownloadThemesPartialCommand;
use AspirePress\AspireSync\Commands\Themes\InternalThemeDownloadCommand;
use AspirePress\AspireSync\Commands\Themes\MetaImportThemesCommand;
use AspirePress\AspireSync\Commands\Themes\MetaDownloadThemesCommand;
use AspirePress\AspireSync\Commands\UtilCleanCommand;
use AspirePress\AspireSync\Commands\UtilUploadCommand;
use Symfony\Component\Console\Application;

require 'vendor/autoload.php';

$config = require './config/config.php';

ini_set('memory_limit', '4G');

$dependencies                       = $config['dependencies'];
$dependencies['services']['config'] = $config;

$container = new \Laminas\ServiceManager\ServiceManager($dependencies);

$application = new Application();

$application->add($container->get(RunAllCommand::class));

$application->add($container->get(InternalPluginDownloadCommand::class));
$application->add($container->get(DownloadPluginsCommand::class));
$application->add($container->get(MetaImportPluginsCommand::class));
$application->add($container->get(MetaDownloadPluginsCommand::class));
$application->add($container->get(DownloadPluginsPartialCommand::class));

$application->add($container->get(MetaDownloadThemesCommand::class));
$application->add($container->get(MetaImportThemesCommand::class));
$application->add($container->get(DownloadThemesCommand::class));
$application->add($container->get(DownloadThemesPartialCommand::class));
$application->add($container->get(InternalThemeDownloadCommand::class));

$application->add($container->get(UtilCleanCommand::class));
$application->add($container->get(UtilUploadCommand::class));
$application->run();
