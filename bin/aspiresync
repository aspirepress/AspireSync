#!/usr/bin/env php
<?php

use AspirePress\AspireSync\Commands\Plugins\DownloadPluginsCommand;
use AspirePress\AspireSync\Commands\Plugins\DownloadPluginsPartialCommand;
use AspirePress\AspireSync\Commands\Plugins\InternalPluginDownloadCommand;
use AspirePress\AspireSync\Commands\Plugins\PluginsMetaCommand;
use AspirePress\AspireSync\Commands\RunAllCommand;
use AspirePress\AspireSync\Commands\Themes\DownloadThemesCommand;
use AspirePress\AspireSync\Commands\Themes\DownloadThemesPartialCommand;
use AspirePress\AspireSync\Commands\Themes\InternalThemeDownloadCommand;
use AspirePress\AspireSync\Commands\Themes\ThemesMetaCommand;
use Symfony\Component\Config\FileLocator;
use Symfony\Component\Console\Application;
use Symfony\Component\DependencyInjection\ContainerBuilder;
use Symfony\Component\DependencyInjection\Loader\PhpFileLoader;
use Symfony\Component\Dotenv\Dotenv;

ini_set('memory_limit', '4G');

require 'vendor/autoload.php';

$dotenv = new Dotenv();
$dotenv->loadEnv(__DIR__.'/../.env');

$container = new ContainerBuilder();
$loader = new PhpFileLoader($container, new FileLocator(__DIR__ . '/../config'));
$loader->load('services.php');
$container->compile();

$application = new Application();

$application->add($container->get(RunAllCommand::class));

$application->add($container->get(InternalPluginDownloadCommand::class));
$application->add($container->get(DownloadPluginsCommand::class));
$application->add($container->get(PluginsMetaCommand::class));
$application->add($container->get(DownloadPluginsPartialCommand::class));

$application->add($container->get(ThemesMetaCommand::class));
$application->add($container->get(DownloadThemesCommand::class));
$application->add($container->get(DownloadThemesPartialCommand::class));
$application->add($container->get(InternalThemeDownloadCommand::class));

// $application->add($container->get(UtilUploadCommand::class));    // borked
$application->run();
