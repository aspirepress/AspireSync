#!/usr/bin/env php
<?php

use AspirePress\AspireSync\Commands\Plugins\DownloadPluginsCommand;
use AspirePress\AspireSync\Commands\Plugins\DownloadPluginsPartialCommand;
use AspirePress\AspireSync\Commands\Plugins\InternalPluginDownloadCommand;
use AspirePress\AspireSync\Commands\Plugins\PluginsMetaCommand;
use AspirePress\AspireSync\Commands\RunAllCommand;
use AspirePress\AspireSync\Commands\Themes\DownloadThemesCommand;
use AspirePress\AspireSync\Commands\Themes\DownloadThemesPartialCommand;
use AspirePress\AspireSync\Commands\Themes\InternalThemeDownloadCommand;
use AspirePress\AspireSync\Commands\Themes\ThemesMetaCommand;
use Symfony\Component\Config\FileLocator;
use Symfony\Component\Console\Application;
use Symfony\Component\DependencyInjection\ContainerBuilder;
use Symfony\Component\DependencyInjection\Loader\PhpFileLoader;
use Symfony\Component\Dotenv\Dotenv;

ini_set('memory_limit', '4G');

// all-caps variable names because they're globals visible to the rest of the app

$APP_DIR = dirname(__DIR__);

require "$APP_DIR/vendor/autoload.php";

(new Dotenv())->loadEnv("$APP_DIR/.env");

$CONTAINER = new ContainerBuilder();
(new PhpFileLoader($CONTAINER, new FileLocator(__DIR__ . '/../config')))->load('services.php');
$CONTAINER->compile();

$APP = new Application();

$APP->add($CONTAINER->get(RunAllCommand::class));
$APP->add($CONTAINER->get(InternalPluginDownloadCommand::class));
$APP->add($CONTAINER->get(DownloadPluginsCommand::class));
$APP->add($CONTAINER->get(PluginsMetaCommand::class));
$APP->add($CONTAINER->get(DownloadPluginsPartialCommand::class));
$APP->add($CONTAINER->get(ThemesMetaCommand::class));
$APP->add($CONTAINER->get(DownloadThemesCommand::class));
$APP->add($CONTAINER->get(DownloadThemesPartialCommand::class));
$APP->add($CONTAINER->get(InternalThemeDownloadCommand::class));
// $application->add($container->get(UtilUploadCommand::class));    // borked

$APP->run();
